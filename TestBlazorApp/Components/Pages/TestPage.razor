@* @page "/people"

@using TestBlazorApp.Models

@inject DataAccessLayer data;
@inject IConfiguration configuration;

<div class="container">
    <table>
        @data.GetPeopleAsync()
    </table>
</div> *@
@* 
@code{
    //List<Person> people;

    protected override async Task OnInitializedAsync()
    {
        string sql = "select * from people";
        //people = await data.GetPeopleAsync();
    }
} *@

@* <table class="table">
    <thead>
        <tr style="cursor:pointer;">
            <th>Product Id</th>
            <th>Product Name</th>
            <th>Date</th>
            <th>Price</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Item item in Items)
        {
            <tr style="cursor:pointer" @onclick="()=>item.opened=!item.opened">
                <td>@item.id</td>
                <td>@item.name</td>
                <td>@item.dateArrival.ToString("dddd MMMM d, yyyy")</td>
                <td>@item.price$</td>
            </tr>
            @if (item.opened)
            {
                <tr>
                    <td colspan="5">
                        <p>
                            Lorem Ipsum is simply dummy text
                        </p>
                    </td>
                </tr>
            }
        }
    </tbody>
</table> *@

@* @code {
    class Item
    {
        public int id;
        public string name;
        public DateTime dateArrival;
        public double price;
        public bool opened;  // I call this a state carrier, because it's not really data.

        public Item(int ID, string Name, DateTime DateArrival, double Price) {
            id = ID; name = Name; ; price = Price; DateArrival = dateArrival;
        }
    }
    List<Item> Items = new List<Item>();

    protected override void OnInitialized()
    {
        Items.Add(new Item(183, "Laptop", new DateTime(),1520));
        Items.Add(new Item(184, "Smart watch", new DateTime(1999, 9, 9), 300));
        Items.Add(new Item(1, "Keyboard", new DateTime(1, 1, 1), 20));
    }

   
} *@
