@page "/edit-person/{id:int}"

@inject NavigationManager navigation;
@inject IDataAccessLayer data;
@inject IConfiguration config;

@using Models;

<h3>Edit Person</h3>

@if (person == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@person" OnValidSubmit="@UpdatePerson" FormName="MyForm">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div>
            <label>Name:</label>
            <InputText id="name" @bind-Value="person.Name" />
            <ValidationMessage For="@(() => person.Name)" />
        </div>
        <div>
            <label>Gender:</label>
            <InputText id="gender" @bind-Value="person.Gender" />
            <ValidationMessage For="@(() => person.Gender)" />
        </div>
        

        @* <button class="btn btn-info" type="submit">Update Info</button> *@
        <button class="btn btn-primary" @onclick="UpdatePerson">Submit</button>
    </EditForm>
}

@code {
    Person person;

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        person = await data.GetPersonAsync(Id, config.GetConnectionString("DefaultConnection"));
    }

    private async Task UpdatePerson()
    {
        await data.UpdatePersonAsync(person, config.GetConnectionString("DefaultConnection"));
        navigation.NavigateTo("/people");
    }
}
